When would you want to use a remote repository rather than keeping all your work
local?

I would like to use a remote repository to mostly back up my work on github 
servers or collaborate with friends or collegues while working on a project.

I have the option to buy a subscription for a private repository on github to 
avoid public gists on valuable work. Since github offers free remote repositories
for opensource projects I'm most likely to use a remote repository for projects 
that don't have to deal with any proprietary code.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

I may want to always pull changes manually rather than having git automatically 
sync with my remote repository to avoid cluttering up my local repositories with 
unnecessary changes. 

It's considered best practice while using github to collaborate with others.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Forks are created on github by cloning other repositories on github into your own
fork. This enables you to make changes in the repository on a copy of your own 
version, leaving the original work by the author intact.

Clones of repositories on github and your own machine/local network can be created 
using the command `git clone` <repo_location>, unlike creating forks that only exist on 
github.

Branches are different nodes of different versions of your work within your 
concept map of the repository you are currently working on.

Each of them has been created to serve a purpose, and I'd like to use them on 
purpose when it seems most appropriate.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

What is the benefit of having a copy of the last known state of the remote
stored locally?

You can make changes to it and work on it locally even when you're on an airplane
with no internet connection. 

You get the most recent version of the repository you are cloning.

You don't have to worry about messing up the project or breaking it or losing it in
a computer crash.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I would collaborate using ftp as an alternative for git or github, storage for 
files would have been easier.

Sharing of files is possible with ftp, but tracking changes in files or getting a 
more detailed report on the project over all would have been a more tedious task. 
 
Getting the most efficient platform to collaborate, experiment, organize hackathons, 
and build software together wouldn't have been possible without git and github.

A service that is open source and caters more efficiently to the internet marketplace
for software engineers based on their requirements.

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

I would like to make changes in a separate branch while working with a new library 
or experimental code adding new features. Whenever I can anticipate that an experiment 
or a new feature may break the entire project, I would choose to make changes in 
a branch rather than directly in master.

When I'm confident about a change that would only upgrade the project then I am 
most certainly likely to make changes directly to the master.

The benefits of working with a branch, includes experimenting on new features 
before making changes final. Although the process to merge your branch into master
can get quite complicated.

The benefits of working with the master is that it creates a fast forward merge 
and changes can be tracked using git log. Although this approach is not suitable 
for complex tasks that first need to be tested thoroughly or any experimental feature
that may break the project. This is where pull requests are more helpful.
    
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
